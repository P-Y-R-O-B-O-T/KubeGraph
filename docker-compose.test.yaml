services:
  cluster-state:
    image: kubegraph-cluster-state:latest
    container_name: cluster-state-kubegraph
    restart: unless-stopped
    volumes:
      - /kubeconf:/kubeconf
    networks:
      - cluster-state-kubegraph
    environment:
      - CLUSTER_STATE_API_CRED_USER=${CLUSTER_STATE_API_CRED_USER}
      - CLUSTER_STATE_API_CRED_PASSWD=${CLUSTER_STATE_API_CRED_PASSWD}
      - CLUSTER_STATE_REDIS_CRED_USER=${CLUSTER_STATE_REDIS_CRED_USER}
      - CLUSTER_STATE_REDIS_CRED_PASSWD=${CLUSTER_STATE_REDIS_CRED_PASSWD}
    depends_on:
      - api
      - redis
      - nginx

  cluster-watcher:
    image: kubegraph-cluster-watcher:latest
    container_name: cluster-watcher-kubegraph
    restart: unless-stopped
    volumes:
      - /kubeconf:/kubeconf
    networks:
      - cluster-watcher-kubegraph
    environment:
      - CLUSTER_WATCH_API_CRED_USER=${CLUSTER_WATCH_API_CRED_USER}
      - CLUSTER_WATCH_API_CRED_PASSWD=${CLUSTER_WATCH_API_CRED_PASSWD}
      - CLUSTER_WATCH_REDIS_CRED_USER=${CLUSTER_WATCH_REDIS_CRED_USER}
      - CLUSTER_WATCH_REDIS_CRED_PASSWD=${CLUSTER_WATCH_REDIS_CRED_PASSWD}
    depends_on:
      - api
      - redis
      - nginx

  mongo:
    image: mongo
    container_name: mongo-kubegraph
    restart: unless-stopped
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
    ports:
      - 27072:27017
    networks:
      - mongo-kubegraph
    volumes:
      - mongo:/data/db

  redis:
    image: redis:8.0.2-alpine3.21
    container_name: redis-kubegraph
    restart: unless-stopped
    command: ["/bin/local/custom-entrypoint.sh"]
    networks:
      - redis-kubegraph
      - api-kubegraph
      - cluster-state-kubegraph
      - cluster-watcher-kubegraph
    volumes:
      - ./redis/entrypoint.sh:/bin/local/custom-entrypoint.sh
      - redis:/data
    ports:
      - "6379:6379"
    environment:
      - CLUSTER_WATCH_REDIS_CRED_USER=${CLUSTER_WATCH_REDIS_CRED_USER}
      - CLUSTER_WATCH_REDIS_CRED_PASSWD=${CLUSTER_WATCH_REDIS_CRED_PASSWD}
      - CLUSTER_STATE_REDIS_CRED_USER=${CLUSTER_STATE_REDIS_CRED_USER}
      - CLUSTER_STATE_REDIS_CRED_PASSWD=${CLUSTER_STATE_REDIS_CRED_PASSWD}
      - API_REDIS_CRED_USER=${API_REDIS_CRED_USER}
      - API_REDIS_CRED_PASSWD=${API_REDIS_CRED_PASSWD}
      - GRAPHGEN_REDIS_CRED_USER=${GRAPHGEN_REDIS_CRED_USER}
      - GRAPHGEN_REDIS_CRED_PASSWD=${GRAPHGEN_REDIS_CRED_PASSWD}
      - REDIS_ADMIN_USER=${REDIS_ADMIN_USER}
      - REDIS_ADMIN_PASSWD=${REDIS_ADMIN_PASSWD}

  redis-insight:
    image: redis/redisinsight:latest
    container_name: redisinsight-kubegraph
    ports:
      - "5540:5540"
    environment:
      RI_REDIS_HOST: redis
      RI_REDIS_PORT: 6379
      RI_REDIS_ALIAS: "Kubegraph-Redis"
      RI_REDIS_USERNAME: ${REDIS_ADMIN_USER}
      RI_REDIS_PASSWORD: ${REDIS_ADMIN_PASSWD}
      RI_PROXY_PATH: /redisinsight
    depends_on:
      - redis
    networks:
      - redis-kubegraph

  api:
    image: kubegraph-api:latest
    container_name: api-kubegraph
    restart: unless-stopped
    ports:
      - 8888:8000
    networks:
      - mongo-kubegraph
      - api-kubegraph
    environment:
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - API_AUTH_SECRET_KEY=${API_AUTH_SECRET_KEY}
    depends_on:
      - mongo

  init-db:
    image: kubegraph-init-db:latest
    container_name: init-db-kubegraph
    networks:
      - mongo-kubegraph
    environment:
      - API_AUTH_SECRET_KEY=${API_AUTH_SECRET_KEY}
      - MONGO_INITDB_ROOT_USERNAME=${MONGO_INITDB_ROOT_USERNAME}
      - MONGO_INITDB_ROOT_PASSWORD=${MONGO_INITDB_ROOT_PASSWORD}
      - ADMIN_API_CRED_USER=${ADMIN_API_CRED_USER}
      - ADMIN_API_CRED_PASSWD=${ADMIN_API_CRED_PASSWD}
      - CLUSTER_WATCH_API_CRED_USER=${CLUSTER_WATCH_API_CRED_USER}
      - CLUSTER_WATCH_API_CRED_PASSWD=${CLUSTER_WATCH_API_CRED_PASSWD}
      - CLUSTER_STATE_API_CRED_USER=${CLUSTER_STATE_API_CRED_USER}
      - CLUSTER_STATE_API_CRED_PASSWD=${CLUSTER_STATE_API_CRED_PASSWD}
    depends_on:
      - mongo

  nginx:
    image: nginx:1.27.5-alpine3.21
    container_name: nginx-kubegraph
    networks:
      - api-kubegraph
      - frontend-kubegraph
      - cluster-state-kubegraph
      - cluster-watcher-kubegraph
      - redis-kubegraph
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/conf.d/default.conf:ro
    ports:
      - 8008:80
    depends_on:
      - api
      - frontend
      - redis-insight

  frontend:
    image: kubegraph-frontend:latest
    container_name: kubegraph-frontend
    networks:
      - frontend-kubegraph
    ports:
      - 3000:3000

networks:
  cluster-state-kubegraph:
  cluster-watcher-kubegraph:
  mongo-kubegraph:
  redis-kubegraph:
  api-kubegraph:
  frontend-kubegraph:

volumes:
  kubeconfig:
    driver: local
  mongo:
    driver: local
  redis:
    driver: local
